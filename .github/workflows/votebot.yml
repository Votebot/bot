name: Build & Deploy

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: Test with Gradle
        run: ./gradlew test ktlintCheck
      - name: Build with Gradle
        run: ./gradlew classes
      - name: Make Distribution with Gradle
        if: github.ref == 'refs/heads/main'
        run: ./gradlew installDist
      - name: Login
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: docker login ghcr.io --username ci --password "$GITHUB_TOKEN"
      - name: Build & Tag
        if: github.ref == 'refs/heads/main'
        run: docker build -t ghcr.io/votebot/votebot/bot:latest -t ghcr.io/votebot/votebot/bot:"$GITHUB_SHA" .
      - name: Push
        if: github.ref == 'refs/heads/main'
        run: docker push ghcr.io/votebot/votebot/bot:latest
      - name: Push specific tag
        if: github.ref == 'refs/heads/main'
        run: docker push ghcr.io/votebot/votebot/bot:"$GITHUB_SHA"
      - name: Create Sentry Release
        if: github.ref == 'refs/heads/main'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          # Install Sentry CLI
          curl -sL https://sentry.io/get-cli/ | bash

          # Create new Sentry release
          export SENTRY_RELEASE=$(sentry-cli releases propose-version)
          sentry-cli releases new $SENTRY_RELEASE -p $SENTRY_PROJECT
          sentry-cli releases set-commits --auto $SENTRY_RELEASE
          sentry-cli releases finalize $SENTRY_RELEASE